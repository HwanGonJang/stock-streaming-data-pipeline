apiVersion: v1
kind: Namespace
metadata:
  name: test
---
### Define a Service for application '2048'
apiVersion: v1
kind: Service
metadata:
  name: game-2048-service
  namespace: test
spec:
  selector:
    app: game-2048
  ports:
    - protocol: TCP
      port: 80           # exposed port number
      targetPort: 80      # forwarded port number into application
      nodePort: 30090     # mapped port number in the cluster
  type: LoadBalancer
---
### Define an Ingress to connect with the Service
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: game-2048-ingress
  namespace: test
spec:
  ingressClassName: nginx
  rules:
    - host: 'test.hwangonjang.com'   # hostname to be connected in the Ingress
      http:
        paths:
          - backend:
              service:
                name: game-2048-service
                port:
                  number: 80
            path: /
            pathType: Prefix
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: game-2048
  namespace: test
  labels:
    app: game-2048
spec:
  replicas: 1
  selector:
    matchLabels:
      app: game-2048
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: game-2048
      labels:
        app: game-2048
    spec:
      containers:
        - name: game-2048
          image: alexwhen/docker-2048:latest # docker repository path
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: 32Mi
              cpu: 60m
            limits:
              memory: 32Mi
              cpu: 60m
      restartPolicy: Always