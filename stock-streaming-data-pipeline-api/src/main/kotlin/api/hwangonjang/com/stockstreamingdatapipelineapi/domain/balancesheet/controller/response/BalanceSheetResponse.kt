package api.hwangonjang.com.stockstreamingdatapipelineapi.domain.balancesheet.controller.response

import api.hwangonjang.com.stockstreamingdatapipelineapi.domain.balancesheet.dto.BalanceSheetDto
import java.time.LocalDate
import java.time.LocalDateTime

data class BalanceSheetResponse(
    val id: Long?,
    val symbol: String,
    val fiscalDateEnding: LocalDate,
    val reportedCurrency: String?,
    val totalAssets: Long?,
    val totalCurrentAssets: Long?,
    val cashAndCashEquivalentsAtCarryingValue: Long?,
    val cashAndShortTermInvestments: Long?,
    val inventory: Long?,
    val currentNetReceivables: Long?,
    val totalNonCurrentAssets: Long?,
    val propertyPlantEquipment: Long?,
    val accumulatedDepreciationAmortizationPpe: Long?,
    val intangibleAssets: Long?,
    val intangibleAssetsExcludingGoodwill: Long?,
    val goodwill: Long?,
    val investments: Long?,
    val longTermInvestments: Long?,
    val shortTermInvestments: Long?,
    val otherCurrentAssets: Long?,
    val otherNonCurrentAssets: Long?,
    val totalLiabilities: Long?,
    val totalCurrentLiabilities: Long?,
    val currentAccountsPayable: Long?,
    val deferredRevenue: Long?,
    val currentDebt: Long?,
    val shortTermDebt: Long?,
    val totalNonCurrentLiabilities: Long?,
    val capitalLeaseObligations: Long?,
    val longTermDebt: Long?,
    val currentLongTermDebt: Long?,
    val longTermDebtNoncurrent: Long?,
    val shortLongTermDebtTotal: Long?,
    val otherCurrentLiabilities: Long?,
    val otherNonCurrentLiabilities: Long?,
    val totalShareholderEquity: Long?,
    val treasuryStock: Long?,
    val retainedEarnings: Long?,
    val commonStock: Long?,
    val commonStockSharesOutstanding: Long?,
    val isQuarterly: Boolean,
    val lastUpdated: LocalDateTime?
) {
    companion object {
        fun from(dto: BalanceSheetDto): BalanceSheetResponse {
            return BalanceSheetResponse(
                id = dto.id,
                symbol = dto.symbol,
                fiscalDateEnding = dto.fiscalDateEnding,
                reportedCurrency = dto.reportedCurrency,
                totalAssets = dto.totalAssets,
                totalCurrentAssets = dto.totalCurrentAssets,
                cashAndCashEquivalentsAtCarryingValue = dto.cashAndCashEquivalentsAtCarryingValue,
                cashAndShortTermInvestments = dto.cashAndShortTermInvestments,
                inventory = dto.inventory,
                currentNetReceivables = dto.currentNetReceivables,
                totalNonCurrentAssets = dto.totalNonCurrentAssets,
                propertyPlantEquipment = dto.propertyPlantEquipment,
                accumulatedDepreciationAmortizationPpe = dto.accumulatedDepreciationAmortizationPpe,
                intangibleAssets = dto.intangibleAssets,
                intangibleAssetsExcludingGoodwill = dto.intangibleAssetsExcludingGoodwill,
                goodwill = dto.goodwill,
                investments = dto.investments,
                longTermInvestments = dto.longTermInvestments,
                shortTermInvestments = dto.shortTermInvestments,
                otherCurrentAssets = dto.otherCurrentAssets,
                otherNonCurrentAssets = dto.otherNonCurrentAssets,
                totalLiabilities = dto.totalLiabilities,
                totalCurrentLiabilities = dto.totalCurrentLiabilities,
                currentAccountsPayable = dto.currentAccountsPayable,
                deferredRevenue = dto.deferredRevenue,
                currentDebt = dto.currentDebt,
                shortTermDebt = dto.shortTermDebt,
                totalNonCurrentLiabilities = dto.totalNonCurrentLiabilities,
                capitalLeaseObligations = dto.capitalLeaseObligations,
                longTermDebt = dto.longTermDebt,
                currentLongTermDebt = dto.currentLongTermDebt,
                longTermDebtNoncurrent = dto.longTermDebtNoncurrent,
                shortLongTermDebtTotal = dto.shortLongTermDebtTotal,
                otherCurrentLiabilities = dto.otherCurrentLiabilities,
                otherNonCurrentLiabilities = dto.otherNonCurrentLiabilities,
                totalShareholderEquity = dto.totalShareholderEquity,
                treasuryStock = dto.treasuryStock,
                retainedEarnings = dto.retainedEarnings,
                commonStock = dto.commonStock,
                commonStockSharesOutstanding = dto.commonStockSharesOutstanding,
                isQuarterly = dto.isQuarterly,
                lastUpdated = dto.lastUpdated
            )
        }
    }
}