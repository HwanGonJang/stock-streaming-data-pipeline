package api.hwangonjang.com.stockstreamingdatapipelineapi.domain.companyoverview.controller.response

import api.hwangonjang.com.stockstreamingdatapipelineapi.domain.companyoverview.dto.CompanyOverviewDto
import java.math.BigDecimal
import java.time.LocalDate
import java.time.LocalDateTime

data class CompanyOverviewResponse(
    val symbol: String,
    val description: String?,
    val currency: String?,
    val country: String?,
    val sector: String?,
    val industry: String?,
    val address: String?,
    val fiscalYearEnd: String?,
    val latestQuarter: LocalDate?,
    val marketCapitalization: Long?,
    val ebitda: Long?,
    val peRatio: BigDecimal?,
    val pegRatio: BigDecimal?,
    val bookValue: BigDecimal?,
    val dividendPerShare: BigDecimal?,
    val dividendYield: BigDecimal?,
    val eps: BigDecimal?,
    val revenuePerShareTtm: BigDecimal?,
    val profitMargin: BigDecimal?,
    val operatingMarginTtm: BigDecimal?,
    val returnOnAssetsTtm: BigDecimal?,
    val returnOnEquityTtm: BigDecimal?,
    val revenueTtm: Long?,
    val grossProfitTtm: Long?,
    val dilutedEpsTtm: BigDecimal?,
    val quarterlyEarningsGrowthYoy: BigDecimal?,
    val quarterlyRevenueGrowthYoy: BigDecimal?,
    val analystTargetPrice: BigDecimal?,
    val trailingPe: BigDecimal?,
    val forwardPe: BigDecimal?,
    val priceToSalesRatioTtm: BigDecimal?,
    val priceToBookRatio: BigDecimal?,
    val evToRevenue: BigDecimal?,
    val evToEbitda: BigDecimal?,
    val beta: BigDecimal?,
    val fiftyTwoWeekHigh: BigDecimal?,
    val fiftyTwoWeekLow: BigDecimal?,
    val fiftyDayMovingAverage: BigDecimal?,
    val twoHundredDayMovingAverage: BigDecimal?,
    val sharesOutstanding: Long?,
    val sharesFloat: Long?,
    val sharesShort: Long?,
    val sharesShortPriorMonth: Long?,
    val shortRatio: BigDecimal?,
    val shortPercentOutstanding: BigDecimal?,
    val shortPercentFloat: BigDecimal?,
    val percentInsiders: BigDecimal?,
    val percentInstitutions: BigDecimal?,
    val forwardAnnualDividendRate: BigDecimal?,
    val forwardAnnualDividendYield: BigDecimal?,
    val payoutRatio: BigDecimal?,
    val dividendDate: LocalDate?,
    val exDividendDate: LocalDate?,
    val lastSplitFactor: String?,
    val lastSplitDate: LocalDate?,
    val lastUpdated: LocalDateTime?
) {
    companion object {
        fun from(dto: CompanyOverviewDto): CompanyOverviewResponse {
            return CompanyOverviewResponse(
                symbol = dto.symbol,
                description = dto.description,
                currency = dto.currency,
                country = dto.country,
                sector = dto.sector,
                industry = dto.industry,
                address = dto.address,
                fiscalYearEnd = dto.fiscalYearEnd,
                latestQuarter = dto.latestQuarter,
                marketCapitalization = dto.marketCapitalization,
                ebitda = dto.ebitda,
                peRatio = dto.peRatio,
                pegRatio = dto.pegRatio,
                bookValue = dto.bookValue,
                dividendPerShare = dto.dividendPerShare,
                dividendYield = dto.dividendYield,
                eps = dto.eps,
                revenuePerShareTtm = dto.revenuePerShareTtm,
                profitMargin = dto.profitMargin,
                operatingMarginTtm = dto.operatingMarginTtm,
                returnOnAssetsTtm = dto.returnOnAssetsTtm,
                returnOnEquityTtm = dto.returnOnEquityTtm,
                revenueTtm = dto.revenueTtm,
                grossProfitTtm = dto.grossProfitTtm,
                dilutedEpsTtm = dto.dilutedEpsTtm,
                quarterlyEarningsGrowthYoy = dto.quarterlyEarningsGrowthYoy,
                quarterlyRevenueGrowthYoy = dto.quarterlyRevenueGrowthYoy,
                analystTargetPrice = dto.analystTargetPrice,
                trailingPe = dto.trailingPe,
                forwardPe = dto.forwardPe,
                priceToSalesRatioTtm = dto.priceToSalesRatioTtm,
                priceToBookRatio = dto.priceToBookRatio,
                evToRevenue = dto.evToRevenue,
                evToEbitda = dto.evToEbitda,
                beta = dto.beta,
                fiftyTwoWeekHigh = dto.fiftyTwoWeekHigh,
                fiftyTwoWeekLow = dto.fiftyTwoWeekLow,
                fiftyDayMovingAverage = dto.fiftyDayMovingAverage,
                twoHundredDayMovingAverage = dto.twoHundredDayMovingAverage,
                sharesOutstanding = dto.sharesOutstanding,
                sharesFloat = dto.sharesFloat,
                sharesShort = dto.sharesShort,
                sharesShortPriorMonth = dto.sharesShortPriorMonth,
                shortRatio = dto.shortRatio,
                shortPercentOutstanding = dto.shortPercentOutstanding,
                shortPercentFloat = dto.shortPercentFloat,
                percentInsiders = dto.percentInsiders,
                percentInstitutions = dto.percentInstitutions,
                forwardAnnualDividendRate = dto.forwardAnnualDividendRate,
                forwardAnnualDividendYield = dto.forwardAnnualDividendYield,
                payoutRatio = dto.payoutRatio,
                dividendDate = dto.dividendDate,
                exDividendDate = dto.exDividendDate,
                lastSplitFactor = dto.lastSplitFactor,
                lastSplitDate = dto.lastSplitDate,
                lastUpdated = dto.lastUpdated
            )
        }
    }
}