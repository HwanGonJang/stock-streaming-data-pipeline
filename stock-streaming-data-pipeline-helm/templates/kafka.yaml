apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: pipeline-namespace
spec:
  serviceName: "zookeeper"
  replicas: 1
  selector:
    matchLabels:
      k8s.service: zookeeper
  template:
    metadata:
      labels:
        k8s.service: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:6.2.0
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
          livenessProbe:
            tcpSocket:
              port: 2181
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 2181
            initialDelaySeconds: 10
            periodSeconds: 5
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-service
  namespace: pipeline-namespace
spec:
  serviceName: "kafka-service"
  replicas: 1
  selector:
    matchLabels:
      k8s.service: kafka
  template:
    metadata:
      labels:
        k8s.service: kafka
    spec:
      containers:
        - name: kafka-service
          image: public.ecr.aws/d7v9d9b4/stock-streaming-data-pipeline/kafka:latest
          ports:
            - containerPort: 9092
            - containerPort: 29092
          env:
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://localhost:29092,PLAINTEXT_HOST://kafka-service.pipeline-namespace.svc.cluster.local:9092"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 30
            periodSeconds: 5
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "/kafka-setup-k8s.sh"]
          volumeMounts:
            - name: kafka-volume
              mountPath: /var/data
        - name: kafdrop
          image: obsidiandynamics/kafdrop:3.30.0
          ports:
            - containerPort: 19000
          env:
            - name: KAFKA_BROKERCONNECT
              value: "localhost:29092"
      hostname: kafka-service
  volumeClaimTemplates:
  - metadata:
      name: kafka-volume
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: hostpath
      volumeName: kafka-volume
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: pipeline-namespace
spec:
  ports:
    - name: "2181"
      port: 2181
      targetPort: 2181
  selector:
    k8s.service: zookeeper
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: pipeline-namespace
spec:
  ports:
    - name: "9092"
      port: 9092
      targetPort: 9092
    - name: "29092"
      port: 29092
      targetPort: 29092
    - name: "19000"
      port: 19000
      targetPort: 19000
  selector:
    k8s.service: kafka
  clusterIP: None
